#!/bin/bash

# exit on error
set -e

CONFIG_PATH="$HOME/.config/pixel/config.json"
BREW_PREFIX=$(brew --prefix pixel)
EXAMPLE_PATH="${BREW_PREFIX}/config/config.example.json"

if [[ ! -f "$CONFIG_PATH" ]]; then
	echo "❌ Config not found at $CONFIG_PATH"
	read -p "❔ Create config from example? [y/N]: " create_config
	if [[ "$create_config" =~ ^[Yy]$ ]]; then
    	mkdir -p "$(dirname "$CONFIG_PATH")"
    	cp "$EXAMPLE_PATH" "$CONFIG_PATH"
    	echo "✅ Config created at $CONFIG_PATH. Please review and fill it in."
		exit 1
	else
		echo "Aborted. Please copy config/config.example.json to ~/.config/pixel/config.json and fill it in."
		exit 1
	fi
fi

# Stores the first command-line argument (e.g., init or deploy) into the COMMAND variable.
COMMAND=$1

# Removes the first argument (already stored in COMMAND) from the list of $@ arguments.
shift || true

case "$COMMAND" in
  -v)
    echo "Pixel CLI version 1.0.33"
	;;
  init)
    source "${BREW_PREFIX}/libexec/lib/init.sh"
    ;;
  init-test)
    source "${BREW_PREFIX}/libexec/lib/init-test.sh"
    ;;
  init-prod)
	source "${BREW_PREFIX}/libexec/lib/init-prod.sh"
	;;
  project-name)
	source "${BREW_PREFIX}/libexec/lib/helpers/get-project-name.sh"
	PROJECT_NAME=$(get_project_name)
	echo "$PROJECT_NAME"
	;;
  sync-dev-test)
	source "${BREW_PREFIX}/libexec/lib/helpers/sync-dev-to-test.sh"
	sync_dev_to_test
	;;
  test-pull-main)
	source "${BREW_PREFIX}/libexec/lib/helpers/test-pull-main.sh"
	test_pull_main
	;;
  *)
    echo "Usage: pixel <command>"
    echo "Commands:"
    echo "  init				Initialize GitHub repo + dev environment"
    echo "  init-test			Initialize test environment on Plesk server"
    echo "  init-prod			Initialize production environment on Cloudways server"
	echo "  project-name			Get the current project name based on directory structure"
	echo "  sync-dev-test			Sync plugins and database from dev to test environment"
	echo "  test-pull-main			Pull latest main branch on test environment"
    ;;
esac
